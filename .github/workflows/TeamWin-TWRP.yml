name: TeamWin [TWRP]

on:
  workflow_dispatch:
    inputs:
      DEVICE_NAME:
        description: 'Device Name'
        required: true
        default: ''
        type: string
      BUILD_DESCRIPTION:
        description: 'Build Description'
        required: true
        default: 'Enter build description'
        type: string
      MANIFEST_BRANCH:
        description: 'TWRP Manifest Branch'
        required: true
        default: ''
        type: choice
        options:
          - twrp-12.1
          - twrp-11
          - twrp-10.0-deprecated
          - twrp-9.0
          - twrp-8.1
          - twrp-8.1-macOS
          - twrp-7.1
          - twrp-6.0
          - twrp-5.1
          - twrp-4.4-deprecated
      DEVICE_TREE:
        description: 'Custom Recovery Tree' # Your already made Device Tree for TWRP
        required: true
        default: 'https://github.com/lazycodebuilder/recovery_rmx1851'
        type: string
      DEVICE_TREE_BRANCH:
        description: 'Custom Recovery Tree Branch' # Your Device Tree Branch, make sure it's right.
        required: true
        default: 'android-14'
        type: string
      BUILD_TARGET:
        description: 'Specify your Build Target' # Pick among boot, recovery, and vendor_boot
        required: true
        default: 'recovery'
        type: choice
        options:
          - boot
          - recovery
          - vendor_boot
      LDCHECK:
        description: 'Use LDCHECK'
        required: false
        default: 'false'
        type: boolean
      LDCHECKPATH:
        description: 'Path of blobs to check' # Use it to know what kind of dependencies you're missing for decryption blobs.
        required: true
        default: 'system/bin/qseecomd'
        type: string

jobs:
  build:
    name: Build TWRP by ${{ github.actor }}
    runs-on: ubuntu-20.04
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      - name: Check Out
        uses: actions/checkout@v4

      - name: Send Start Notification
        run: |
          ACTION_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST https://api.telegram.org/bot<TELEGRAM_BOT_TOKEN>/sendMessage \
            -d chat_id="<TELEGRAM_CHAT_ID>" \
            -d text="üöÄ **Build Started for TWRP**  
üì± **Device:** ${{ inputs.DEVICE_NAME }}  
üîß **Description:** ${{ inputs.BUILD_DESCRIPTION }}  
üìö **Manifest Branch:** ${{ inputs.MANIFEST_BRANCH }}  
üîó **Device Tree:** [Device Tree](${{ inputs.DEVICE_TREE }}) (Branch: ${{ inputs.DEVICE_TREE_BRANCH }})  
üõ†Ô∏è **Build Target:** ${{ inputs.BUILD_TARGET }}  
[üîó View Actions]($ACTION_URL)" \
            -d parse_mode="Markdown"

      - name: Display Inputs
        run: |
          echo "Displaying variables/inputs."
          echo "Manifest Branch: ${{ inputs.MANIFEST_BRANCH }}"
          echo "Device Tree: ${{ inputs.DEVICE_TREE }}"
          echo "Device Branch: ${{ inputs.DEVICE_TREE_BRANCH }}"
          echo "Build Target: ${{ inputs.BUILD_TARGET }}image"

      - name: Cleanup
        run: |
          rm -rf android-recovery

      - name: Set Swap Space
        uses: pierotofy/set-swap-space@master
        with:
          swap-size-gb: 12

      - name: Check Manifest Branch
        run: |
          if [ "${{ inputs.MANIFEST_BRANCH }}" == 'twrp-11' ] || [ "${{ inputs.MANIFEST_BRANCH }}" == 'twrp-12.1' ]; then
              echo "MANIFEST=https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git" >> $GITHUB_ENV
              echo "CHECK_LEGACY_BRANCH=false" >> $GITHUB_ENV
          else
              echo "MANIFEST=https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git" >> $GITHUB_ENV
              echo "CHECK_LEGACY_BRANCH=true" >> $GITHUB_ENV
          fi

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt -y install gperf gcc-multilib g++-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libtinfo5 libgflags-dev libncurses5 python3

      - name: Install OpenJDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '8'

      - name: Initialize Repo
        run: |
          mkdir android-recovery
          cd android-recovery
          git config --global user.name "lazycodebuilder"
          git config --global user.email "154446636+lazycodebuilder@users.noreply.github.com"
          repo init --depth=1 -u ${{ env.MANIFEST }} -b ${{ inputs.MANIFEST_BRANCH }}

      - name: Repo Sync
        run: |
          cd android-recovery
          repo sync -j$(nproc --all) --force-sync

      - name: Clone Device Tree
        run: |
          cd android-recovery
          git clone ${{ inputs.DEVICE_TREE }} -b ${{ inputs.DEVICE_TREE_BRANCH }} ./device_tree
          cd device_tree
          echo "COMMIT_ID=$(git rev-parse HEAD)" >> $GITHUB_ENV

      - name: Build Recovery
        run: |
          cd android-recovery
          source build/envsetup.sh
          export ALLOW_MISSING_DEPENDENCIES=true
          lunch ${{ env.DEVICE_MAKEFILE }}-eng && make clean && make ${{ inputs.BUILD_TARGET }}image -j$(nproc --all)
          echo "‚úÖ Build completed for ${{ inputs.BUILD_TARGET }}.img"

      - name: Upload to Release
        uses: softprops/action-gh-release@master
        with:
          files: |
            android-recovery/out/target/product/${{ env.DEVICE_NAME }}/${{ inputs.BUILD_TARGET }}.img
          name: Unofficial TWRP for ${{ env.DEVICE_NAME }} // ${{ env.BUILD_DATE }}
          tag_name: ${{ github.run_id }}
          body: |
            Build: ${{ inputs.MANIFEST_BRANCH }}
            Device: [Device Tree/Branch](${{ inputs.DEVICE_TREE }}/tree/${{ inputs.DEVICE_TREE_BRANCH }})
            Commit: Most recent [commit](${{ inputs.DEVICE_TREE }}/commit/${{ env.COMMIT_ID }}) during building.

      - name: Send Success Notification
        if: success()
        run: |
          RELEASE_LINK="https://github.com/${{ github.repository }}/releases"
          curl -X POST https://api.telegram.org/bot<TELEGRAM_BOT_TOKEN>/sendMessage \
            -d chat_id="<TELEGRAM_CHAT_ID>" \
            -d text="üéâ **Build Finished Successfully**  
üì± **Device:** ${{ inputs.DEVICE_NAME }}  
üîß **Description:** ${{ inputs.BUILD_DESCRIPTION }}  
üìö **Manifest Branch:** ${{ inputs.MANIFEST_BRANCH }}  
üîó **Device Tree:** [Device Tree](${{ inputs.DEVICE_TREE }}) (Branch: ${{ inputs.DEVICE_TREE_BRANCH }})  
üõ†Ô∏è **Build Target:** ${{ inputs.BUILD_TARGET }}  
üîó [Download TWRP](${RELEASE_LINK})" \
            -d parse_mode="Markdown"

      - name: Send Failure Notification
        if: failure()
        run: |
          ACTION_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -X POST https://api.telegram.org/bot<TELEGRAM_BOT_TOKEN>/sendMessage \
            -d chat_id="<TELEGRAM_CHAT_ID>" \
            -d text="‚ùå **Build Failed**  
üì± **Device:** ${{ inputs.DEVICE_NAME }}  
üîß **Description:** ${{ inputs.BUILD_DESCRIPTION }}  
üìö **Manifest Branch:** ${{ inputs.MANIFEST_BRANCH }}  
üîó **Device Tree:** [Device Tree](${{ inputs.DEVICE_TREE }}) (Branch: ${{ inputs.DEVICE_TREE_BRANCH }})  
üõ†Ô∏è **Build Target:** ${{ inputs.BUILD_TARGET }}  
üîó [View Actions]($ACTION_URL)" \
            -d parse_mode="Markdown"
