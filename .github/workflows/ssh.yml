name: SSH TeamWin [TWRP]

on:
  workflow_dispatch:
    inputs:
      MANIFEST_BRANCH:
        description: 'TWRP Manifest Branch'
        required: true
        default: ''
        type: choice
        options:
        - twrp-12.1
        - twrp-11
        - twrp-10.0-deprecated
        - twrp-9.0
        - twrp-8.1
        - twrp-8.1-macOS
        - twrp-7.1
        - twrp-6.0
        - twrp-5.1
        - twrp-4.4-deprecated

jobs:
  build:
    name: Build TWRP by ${{ github.actor }}
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
    - name: Check Out
      uses: actions/checkout@v4

    - name: Free disk space (1/3)
      run: |
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo docker image prune --all --force
          sudo docker builder prune -a

    - name: Free disk space (2/3)
      uses: jlumbroso/free-disk-space@main
      with:
          tool-cache: true

    - name: Free disk space (3/3)
      uses: rokibhasansagar/slimhub_actions@main
      with:
          retain: 'compiler_cmake'
      
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 12

    - name: Check Manifest Branch
      run: |
        if [ ${{ inputs.MANIFEST_BRANCH }} == 'twrp-11' ] || [ ${{ inputs.MANIFEST_BRANCH }} == 'twrp-12.1' ]; then
            echo "MANIFEST=https://github.com/minimal-manifest-twrp/platform_manifest_twrp_aosp.git" >> $GITHUB_ENV
            echo "CHECK_LEGACY_BRANCH=false" >> $GITHUB_ENV
        else
            echo "MANIFEST=https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni.git" >> $GITHUB_ENV
            echo "CHECK_LEGACY_BRANCH=true" >> $GITHUB_ENV
        fi

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libgflags-dev python3 tmate
  
    - name: Install OpenJDK
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Install Git-Repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo

    - name: Initialize Repo
      run: |
        mkdir android-recovery
        cd android-recovery
        git config --global user.name "lazycodebuilder"
        git config --global user.email "154446636+lazycodebuilder@users.noreply.github.com"
        repo init --depth=1 -u ${{ env.MANIFEST }} -b ${{ inputs.MANIFEST_BRANCH }}

    - name: Repo Sync
      run: |
        cd android-recovery
        repo sync -j$(nproc --all) --force-sync

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 360
      with:
        limit-access-to-actor: false
